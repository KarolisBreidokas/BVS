@model ICollection<BVS.Data.Models.Job>
@{
    ViewData["Title"] = "OverpassAPICOM";
}

@{ List<string> address = new List<string> { "Taikos pr. 88-2 Kaunas", "V. Krėvės pr. 33-41 Kaunas", "Užnerio g., Kaunas"};}


    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 400px;
        width: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #floating-panel {
        top: 10px;
        left: 25%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }
    </style>


<h2>GoogleAPICOM</h2>


<div>
    <!--The div element for the map -->
    <div id="floating-panel">
        <b>Start: </b>
        <select id="start">
            
            @foreach (var a in address)
            {   
                <option value="@a">@a</option>
            }
        </select>
        <b>End: </b>
        <select id="end">
            @foreach (var a in address)
            {
                <option value="@a">@a</option>
            }
        </select>
    </div>
    <div id="map"></div>
    <script>
        function initMap() {
            var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer;
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 7,
                center: { lat: 54.901163, lng:  23.908613 }
            });
            directionsDisplay.setMap(map);

            var onChangeHandler = function () {
                calculateAndDisplayRoute(directionsService, directionsDisplay);
            };
            document.getElementById('start').addEventListener('change', onChangeHandler);
            document.getElementById('end').addEventListener('change', onChangeHandler);
        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay) {
            directionsService.route({
                origin: document.getElementById('start').value,
                destination: document.getElementById('end').value,
                travelMode: 'DRIVING'
            }, function (response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCmn7WcBWjrYg4vRtqQc7eqPF4EjeNAyo8&callback=initMap">
    </script>
</div>

